<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.itdr.mappers.CartMapper">
    <resultMap id="BaseResultMap" type="com.itdr.pojo.Cart">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="product_id" property="productId" jdbcType="INTEGER"/>
        <result column="quantity" property="quantity" jdbcType="INTEGER"/>
        <result column="checked" property="checked" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, user_id, product_id, quantity, checked, create_time, update_time
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from neuedu_cart
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from neuedu_cart
    where id = #{id,jdbcType=INTEGER}
  </delete>

    <insert id="insert" parameterType="com.itdr.pojo.Cart">
    insert into neuedu_cart (id, user_id, product_id, 
      quantity, checked, create_time, 
      update_time)
    values (null, #{userId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER},
      #{quantity,jdbcType=INTEGER},1, now(), now())
  </insert>

    <insert id="insertSelective" parameterType="com.itdr.pojo.Cart">
        insert into neuedu_cart
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="checked != null">
                checked,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=INTEGER},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="checked != null">
                #{checked,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.itdr.pojo.Cart">
        update neuedu_cart
        <set>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            update_time = now(),
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.itdr.pojo.Cart">
    update neuedu_cart
    set user_id = #{userId,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      quantity = #{quantity,jdbcType=INTEGER},
      checked = #{checked,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <!--根据用户ID和商品ID判断数据是否存在-->
    <select id="selectByUidAndProductID" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from neuedu_cart
        where user_id=#{uid} and product_id=#{productId}
    </select>

    <!--根据用户ID查询所有购物数据-->
    <select id="selectByUid" parameterType="integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from neuedu_cart
        where user_id=#{uid}
    </select>

    <!--根据用户ID判断用户购物车是否全选-->
    <select id="selectByUidCheck" parameterType="map" resultType="java.lang.Integer">
        select
        count(id)
        from neuedu_cart
        where user_id=#{uid} and checked = #{check}
    </select>

    <!--根据ID改变购物车中商品选中状态-->
    <update id="selectOrUnSelect" parameterType="map">
      update neuedu_cart
      set
      checked = #{check,jdbcType=INTEGER},
      update_time = now()
      where user_id = #{id,jdbcType=INTEGER}
      <if test="productId != null">
          and product_id = #{productId}
      </if>
    </update>

    <!--根据ID更新购物车-->
    <update id="updateById" parameterType="com.itdr.pojo.Cart">
        update neuedu_cart set
        <if test="quantity != null">
            quantity = #{quantity,jdbcType=INTEGER},
        </if>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--根据产品ID从购物车移除产品-->
    <delete id="deleteByProducts" parameterType="map">
        delete from neuedu_cart
        <where>
            user_id = #{id}
            <if test="productIds != null">
                and product_id in
                <foreach collection="productIds" item="productId" open="(" separator="," close=")">
                    #{productId}
                </foreach>
            </if>
        </where>
    </delete>
</mapper>